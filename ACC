Ad Hoc Commands
\\Make sure hosts are accessible from the server by pinging all hosts
    ansible -i hosts all -m ping
\\For specific hosts
    ansible -i hosts all -m ping --limit host2
\\Copy a file to multiple destinations rapidly
    ansible -i hosts all -m copy -a "src=/root/test_ansible/testfile dest=/tmp/testfile
\\Install a Package via yum module
    ansible -i hosts all -m yum -a 'name=ncdu state=present'
\\Gather facts from system variables
    ansible -i hosts all -m setup
    
 Playbooks are a way to send commands to remote systems through scripts
 
     hosts:         \\group of hosts on which the playbook will run\\
     tasks:
         name:      \\yum module is used in this task for installation 
         yum:
             name:
             state:
         -name:     \\service module is used to check if the service is up and running
         service:
             name:
             state:
             
\\Inventory file contains a list of servers divided into groups for better control for details like IP Address and SSH Port for each host

\\Example of Playbook - for first group of hosts "group1" selinux will be enabled
\\                    - for second group of hosts httpd packages will be installed only if the ansible_os_family is RedHat and ansible_system_vendor is HP
\\ Ansible_os_family and ansible_system_vendor are variables gathered with gather_facts option and can be used like in this conditional example.

hosts: group1
tasks:
    - name: Enable SELinux
      selinux:
        state: enabled
      when: ansible_os_family == 'Debian'
      register: enable_selinux
      
    - debug:
        Imag: "Selinux Enable. Please restart the server to apply changes."
      when: enable_selinux.changed == true
      
      
      - hosts: group2
        tasks:
        - name: Install apache
          yum:
            name: httpd
            state: present
          when: ansible_system_vendor == 'HP' and ansible_os_family == 'RedHat'
          
          \\Handler will run only once after all tasks are finished
          
          handlers
              - name: restart sshd
                service: sshd
                  name:sshd
                  stste: restarted
                  
                  
  \\tasks can split by roles - roles are collections of tasks which can be moved from one playbook to another, can be run independtly, but only through a playbook file
  \\to create the directory tree for a role you should use the following commandwith the last parameter, the role name
  
      ansible-galaxy init "rolename"
  

Ansible Commands Cheat Sheet

Install EPEL repo on Centos/RHEL systems

[root@ansible-server ~]# sudo yum install epel-release

Install ansible package on Centos/RHEL systems

[root@ansible-server ~]# sudo  yum install -y ansible

Perform an update to the packages on Debian/Ubuntu systems

$ sudo apt update

Install the software-properties-common package on Debian/Ubuntu systems

$ sudo apt install software-properties-common

Install ansible personal package archive on Debian/Ubuntu systems

$ sudo apt-add-repository ppa:ansible/ansible

Install ansible on Debian/Ubuntu systems

$ sudo apt update
$ sudo apt install ansible

Issue a ping command on all servers defined in the inventory file named hosts

 
[root@ansible-server test_ansible]# ansible -i hosts all -m ping

Issue a ping command only on host2

[root@ansible-server test_ansible]# ansible -i hosts all -m ping --limit host2

Copy the file “testfile” on all hosts in the inventory file

[root@ansible-server test_ansible]# ansible -i hosts all -m copy -a "src=/root/test_ansible/testfile dest=/tmp/testfile"

Install ncdu package on all hosts

[root@ansible-server test_ansible]# ansible -i hosts all -m yum -a 'name=ncdu state=present'

Remove ncdu package on all hosts

[root@ansible-server test_ansible]# ansible -i hosts all -m yum -a 'name=ncdu state=absent'

Build the directory structure for role named role1.

[root@ansible-server test2]# ansible-galaxy init role1

Dry-run p4.yml playbook

[root@ansible-server test_ansible]# ansible-playbook -i hosts p4.yml --check

Run p4.yml playbook with password authentication for all hosts

[root@ansible-server test_ansible]# ansible-playbook -i hosts p4.yml -k
